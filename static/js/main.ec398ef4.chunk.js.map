{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelect","selectedTodoId","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","selectedFilter","onFilterSelect","query","onQueryChange","value","onChange","event","currentTarget","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","onTodoClose","useState","todoOwner","setTodoOwner","useEffect","userId","href","email","name","App","setTodos","isLoadError","setIsLoadError","isLoaded","setIsLoaded","setSelectedTodoId","statusFilter","setStatusFilter","searchQuery","setSearchQuery","catch","finally","visibleTodos","filter","normalizedTitle","toLowerCase","normalizedQuery","split","Boolean","join","isTitleIncludesQuery","includes","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec398ef4.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onTodoSelect: (userId: number) => void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelect,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onTodoSelect(todo.id)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn(\n                    'far',\n                    { 'fa-eye': todo.id !== selectedTodoId },\n                    { 'fa-eye-slash': todo.id === selectedTodoId },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  selectedFilter: string;\n  onFilterSelect: (selectedFilter: string) => void;\n  query: string;\n  onQueryChange: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedFilter,\n  onFilterSelect,\n  query,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedFilter}\n          onChange={(event) => onFilterSelect(event.currentTarget.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.currentTarget.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  onTodoClose: (userId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onTodoClose,\n}) => {\n  const [todoOwner, setTodoOwner] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setTodoOwner);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todoOwner ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onTodoClose(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto: ${todoOwner.email}`}>\n                {todoOwner.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadError, setIsLoadError] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [statusFilter, setStatusFilter] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch(() => setIsLoadError(true))\n      .finally(() => setIsLoaded(true));\n  }, []);\n\n  const visibleTodos = todos.filter(todo => {\n    const normalizedTitle = todo.title.toLowerCase();\n    const normalizedQuery = searchQuery\n      .toLowerCase()\n      .split(' ')\n      .filter(Boolean)\n      .join(' ');\n\n    const isTitleIncludesQuery = normalizedTitle.includes(normalizedQuery);\n\n    switch (statusFilter) {\n      case 'active':\n        return !todo.completed && isTitleIncludesQuery;\n\n      case 'completed':\n        return todo.completed && isTitleIncludesQuery;\n\n      case 'all':\n      default:\n        return isTitleIncludesQuery;\n    }\n  });\n\n  const selectedTodo = visibleTodos.find(todo => (todo.id === selectedTodoId)) || null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilter={statusFilter}\n                onFilterSelect={setStatusFilter}\n                query={searchQuery}\n                onQueryChange={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  onTodoSelect={setSelectedTodoId}\n                  selectedTodoId={selectedTodoId}\n                />\n              )}\n\n              {isLoadError && (\n                <p>We are unable to load todos now, try again later</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onTodoClose={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}